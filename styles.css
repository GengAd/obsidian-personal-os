/**
 * This code is inspired from the work of 702573N https://github.com/702573N/Obsidian-Tasks-Calendar
 */
.tasksCalendar {
  margin-top: 20px;
}
.tasksCalendar span {
  display: contents;
}
.tasksCalendar .buttons {
  cursor: default;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  height: 30px;
  margin-bottom: 4px;
  width: 100%;
}
.tasksCalendar button {
  align-items: center;
  background-color: transparent;
  background: var(--background-secondary);
  border-radius: 5px;
  border: 1px solid var(--nav-item-background-active);
  box-shadow: none;
  color: var(--icon-color);
  cursor: pointer;
  display: inline-flex;
  flex: 0;
  font-size: 14px;
  font-weight: normal;
  height: 30px;
  justify-content: center;
  outline: none;
  padding: 4px 6px;
  user-select: none;
  white-space: nowrap;
}
.tasksCalendar button:nth-child(2), .tasksCalendar button:nth-child(3), .tasksCalendar button:nth-child(6) {
  border-bottom-right-radius: 0;
  border-right: 0.5px solid var(--nav-item-background-active);
  border-top-right-radius: 0;
  margin-right: 0;
}
.tasksCalendar button:nth-child(3), .tasksCalendar button:nth-child(4), .tasksCalendar button:nth-child(7) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0.5px solid var(--nav-item-background-active);
  margin-left: 0;
}
.tasksCalendar button:nth-child(1) {
  margin-right: 4px;
}
.tasksCalendar button:nth-child(8) {
  margin-left: 4px;
}
.tasksCalendar button.statistic {
  position: relative;
}
.tasksCalendar button.statistic svg {
  stroke: var(--icon-color);
}
.tasksCalendar button.statistic[data-percentage="100"]:after {
  display: none !important;
}
.tasksCalendar button.statistic:after {
  background: var(--background-secondary);
  border-radius: 50%;
  border: 1px solid var(--nav-item-background-active);
  color: var(--icon-color);
  content: attr(data-remaining);
  font-size: 9px;
  font-weight: bold;
  height: 14px;
  line-height: 14px;
  overflow: hidden;
  position: absolute;
  right: -8px;
  text-align: center;
  top: -8px;
  width: 14px;
}
.tasksCalendar .current {
  display: inline;
  flex: 1;
  margin: 0 4px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.tasksCalendar .current span:first-child {
  color: var(--icon-color);
  font-weight: bold;
}
.tasksCalendar .current span:last-child {
  color: var(--icon-color-active);
  font-weight: normal;
}
.tasksCalendar svg {
  height: var(--icon-size);
  stroke-width: var(--icon-stroke);
  width: var(--icon-size);
}
.tasksCalendar .statisticPopup {
  right: 0;
}
.tasksCalendar .statisticPopup:before {
  right: 5px;
  top: -10px;
}
.tasksCalendar .weekViewContext {
  left: 65px;
}
.tasksCalendar .weekViewContext:before {
  left: 5px;
  top: -10px;
}
.tasksCalendar .weekViewContext .liIcon {
  display: grid !important;
  height: 18px;
  margin-right: 5px;
  padding: 2px;
  width: 18px;
}
.tasksCalendar .weekViewContext .liIcon .box {
  background: var(--icon-color);
  border-radius: 1px;
  display: grid;
  margin: 0.5px;
  overflow: hidden;
  z-index: 1;
}
.tasksCalendar .weekViewContext li.active .liIcon .box {
  background: var(--icon-color-active) !important;
}
.tasksCalendar .grid {
  cursor: default;
  height: 75vH;
  overflow: hidden;
  width: 100%;
}
.tasksCalendar .grid:has(.taskNumber) {
  height: auto;
}
.tasksCalendar .list {
  cursor: default;
  height: 75vH;
  overflow-x: hidden;
  overflow-y: auto;
  width: 100%;
}
.tasksCalendar .cell {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr;
  margin: 1px 0;
  overflow: hidden;
  z-index: 1;
}
.tasksCalendar .cell.today .cellName {
  color: var(--text-normal);
  font-weight: bold;
  opacity: 1;
}
.tasksCalendar .cell[data-weekday="0"].today .cellName {
  color: var(--icon-color-active);
  font-weight: bold;
  opacity: 1;
}
.tasksCalendar .cellContent {
  align-content: start;
  overflow-x: hidden;
  overflow-y: auto;
  padding: 1px 0;
}
.tasksCalendar .cellContent::-webkit-scrollbar {
  display: none;
}
.tasksCalendar .cellName {
  color: var(--text-normal);
  display: block;
  flex-grow: 0;
  flex-shrink: 0;
  font-size: 14px;
  font-weight: normal;
  margin: 0;
  opacity: 0.8;
  overflow: hidden;
  padding: 0 2px;
  text-align: left;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.tasksCalendar .task {
  background: var(--task-background);
  border-radius: 3px;
  display: block;
  font-size: 14px;
  margin: 1px 1px 2px 1px;
  opacity: 0.8;
  overflow: hidden;
  overflow: hidden;
  padding: 1px;
}
.tasksCalendar .task.hide {
  opacity: 0.2;
}
.tasksCalendar .task .inner {
  -webkit-box-orient: vertical;
  -webkit-hyphens: none !important;
  -webkit-line-clamp: 1;
  border-radius: 3px;
  display: -webkit-box;
  line-height: 1.3;
  overflow: hidden;
  overflow: hidden;
  text-decoration: none !important;
  text-decoration: none;
  text-overflow: ellipsis;
  word-break: break-all !important;
}
.tasksCalendar .task .note {
  background: var(--task-background);
  display: block;
  font-size: 9px;
  overflow: hidden;
  padding: 1px;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}
.tasksCalendar .task .icon {
  display: inline;
  height: 18px;
  margin-right: 3px;
  text-align: center;
  width: 18px;
}
.tasksCalendar .task .description {
  display: inline;
  padding: 1px;
}
.tasksCalendar .task .description:before {
  border-radius: 3px;
  content: attr(data-relative);
  display: inline;
  font-size: 9px;
  margin-right: 3px;
  margin-right: 3px;
  padding: 0 3px;
  vertical-align: middle;
}
.tasksCalendar .task.overdue .description:before {
  background: #ff443a;
  color: white;
}
.tasksCalendar .task.overdue .inner {
  background: repeating-linear-gradient(45deg, var(--task-background), var(--task-background) 5px, transparent 5px, transparent 10px) !important;
}
.tasksCalendar .task:not(.overdue) .description:before {
  background: black;
  color: white;
  display: none;
}
.tasksCalendar .task.dailyNote .description:before, .tasksCalendar .task.done .description:before, .tasksCalendar .task.cancelled .description:before {
  display: none !important;
}
.tasksCalendar .task.cancelled, .tasksCalendar .task.done {
  background: none !important;
}
.tasksCalendar .task.cancelled .note, .tasksCalendar .task.done .note {
  background: var(--nav-item-background-active) !important;
  color: var(--text-faint) !important;
}
.tasksCalendar .task.cancelled .description, .tasksCalendar .task.done .description {
  color: var(--text-faint) !important;
  text-decoration: line-through !important;
}
.tasksCalendar .taskNumber {
  display: flex;
  font-size: 30px;
  font-weight: bold;
  justify-content: center;
}
.tasksCalendar.mini {
  margin: 0 auto;
  max-width: 500px !important;
}
.tasksCalendar.mini .grid {
  height: 400px !important;
}
.tasksCalendar.mini .gridHead,
.tasksCalendar.mini .cellName,
.tasksCalendar.mini .task,
.tasksCalendar.mini .wrapperButton {
  font-size: 9px !important;
}
.tasksCalendar.mini .wrappers:before,
.tasksCalendar.mini .grid:before {
  font-size: 70px !important;
}
.tasksCalendar.mini .statisticPopup li,
.tasksCalendar.mini .weekViewContext li {
  font-size: 9px !important;
}
.tasksCalendar.noWeekNr .wrapperButton,
.tasksCalendar.noWeekNr .gridHead:first-child {
  visibility: hidden !important;
  width: 0 !important;
}
.tasksCalendar.noWeekNr .wrapper,
.tasksCalendar.noWeekNr .gridHeads {
  grid-template-columns: 0px 1fr 1fr 1fr 1fr 1fr 1fr 1fr !important;
}
.tasksCalendar.filter #statisticDone {
  color: var(--text-faint) !important;
  pointer-events: none !important;
}
.tasksCalendar.noCellNameEvent .cellName {
  pointer-events: none !important;
}
.tasksCalendar.lineClamp1 .task .inner {
  -webkit-line-clamp: 1 !important;
  white-space: nowrap !important;
}
.tasksCalendar.lineClamp2 .task .inner {
  -webkit-line-clamp: 2 !important;
}
.tasksCalendar.lineClamp3 .task .inner {
  -webkit-line-clamp: 3 !important;
}
.tasksCalendar.noLineClamp .task .inner {
  display: block !important;
}
.tasksCalendar a {
  text-decoration: none !important;
}
.tasksCalendar summary::marker, .tasksCalendar summary::-webkit-details-marker {
  content: "" !important;
  display: none !important;
}
.tasksCalendar .statisticPopup,
.tasksCalendar .weekViewContext {
  background: var(--background-secondary);
  border-radius: 5px;
  border: 1px solid var(--nav-item-background-active);
  box-shadow: 0px 0px 10px 0px var(--nav-item-background-active);
  display: none;
  font-size: 10px;
  height: auto;
  list-style: none;
  margin: 0 !important;
  padding: 2px !important;
  position: absolute;
  width: 150px;
  width: auto;
  z-index: 99;
}
.tasksCalendar .statisticPopup:before,
.tasksCalendar .weekViewContext:before {
  -webkit-transform: rotate(360deg);
  border-color: transparent transparent var(--background-secondary) transparent;
  border-style: solid;
  border-width: 0 10px 10px 10px;
  content: "";
  height: 0px;
  position: absolute;
  width: 0px;
}
.tasksCalendar .statisticPopup.active,
.tasksCalendar .weekViewContext.active {
  display: block;
}
.tasksCalendar .statisticPopup li,
.tasksCalendar .weekViewContext li {
  align-items: center;
  border-radius: 5px;
  color: var(--text-normal);
  cursor: pointer;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  font-size: 14px;
  height: auto;
  list-style: none;
  padding: 5px 10px;
}
.tasksCalendar .statisticPopup li.active,
.tasksCalendar .weekViewContext li.active {
  background: var(--background-modifier-active-hover);
  color: var(--icon-color-active) !important;
}
.tasksCalendar .statisticPopup li.break,
.tasksCalendar .weekViewContext li.break {
  background: var(--nav-item-background-active);
  border-radius: 0 !important;
  height: 1px !important;
  margin: 2px 5px !important;
  padding: 0 !important;
}
.tasksCalendar .statisticPopup > div,
.tasksCalendar .weekViewContext > div {
  height: 13px;
  margin: auto 0;
}
.tasksCalendar .cell[data-weekday="0"] .cellName,
.tasksCalendar .gridHead[data-weekday="0"] {
  color: var(--icon-color-active);
}
.tasksCalendar.noIcons .task .icon, .tasksCalendar:not(.noFilename) .task.noNoteIcon .icon, .tasksCalendar.noFilename .task .note, .tasksCalendar.filter .task.done, .tasksCalendar.filter .task.cancelled, .tasksCalendar.noScheduled .task.scheduled, .tasksCalendar.noStart .task.start, .tasksCalendar.noDue .task.due, .tasksCalendar.noDone .task.done, .tasksCalendar.noProcess .task.process, .tasksCalendar.noRecurrence .task.recurrence, .tasksCalendar.noOverdue .task.overdue, .tasksCalendar.noDailyNote .task.dailyNote, .tasksCalendar.noLayer .grid .wrappers:before, .tasksCalendar.noLayer .grid:before, .tasksCalendar.noLayer .list:before, .tasksCalendar.noWeekNr .list .weekNr, .tasksCalendar.noOverdueFlag .task .description:before {
  display: none !important;
}
.tasksCalendar[data-weekday="0"].today .cellName {
  color: var(--icon-color-active);
  font-weight: bold;
  opacity: 1;
}
.tasksCalendar[view=week] .cell {
  border-radius: 5px;
  border: 1px solid var(--nav-item-background-active);
  overflow: hidden;
}
.tasksCalendar[view=week] .cell.today {
  background: var(--background-modifier-active-hover) !important;
  border: 1px solid hsla(var(--interactive-accent-hsl), 0.25) !important;
}
.tasksCalendar[view=week] .grid {
  display: grid;
  gap: 2px 4px;
}
.tasksCalendar[view=week] .grid:before {
  content: attr(data-week);
}
.tasksCalendar[view=week].style11 .grid {
  height: 300px;
}
.tasksCalendar[view=week].style11 .cell[data-weekday="0"],
.tasksCalendar[view=week].style11 .cell[data-weekday="6"] {
  display: none !important;
}
.tasksCalendar[view=month] .grid {
  display: grid;
  gap: 4px;
  grid-template-columns: 1fr !important;
  grid-template-rows: 20px 1fr !important;
}
.tasksCalendar[view=month] .gridHeads {
  display: grid;
  border-radius: 5px;
  border: 1px solid var(--nav-item-background-active);
  grid-template-columns: 20px 1fr 1fr 1fr 1fr 1fr 1fr 1fr !important;
  height: 20px;
  width: 100%;
}
.tasksCalendar[view=month] .gridHead {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  font-size: 14px;
  font-weight: bold;
  height: 20px;
  line-height: 20px;
  margin: 0;
  overflow: hidden;
  text-align: center;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.tasksCalendar[view=month] .wrappers {
  display: grid;
  gap: 4px 4px;
  grid-template-columns: 1fr !important;
  grid-template-rows: repeat(6, 16.6666666667%);
  height: calc(100% - 20px);
  min-height: 0;
}
.tasksCalendar[view=month] .wrapper {
  border-radius: 5px;
  border: 1px solid var(--nav-item-background-active);
  display: grid;
  grid-template-columns: 22px 1fr 1fr 1fr 1fr 1fr 1fr 1fr !important;
  grid-template-rows: 1fr !important;
  height: 100%;
  overflow: hidden;
  width: 100%;
  z-index: 1;
}
.tasksCalendar[view=month] .wrapperButton {
  align-items: center;
  background: none;
  /* background: $background-primary; */
  background: var(--background-secondary);
  color: var(--text-normal);
  color: var(--icon-color-active);
  cursor: pointer;
  display: flex;
  font-size: 10px;
  font-weight: normal;
  justify-content: center;
  overflow: hidden;
  text-align: center;
  transform: rotate(180deg);
  width: 100%;
  writing-mode: vertical-lr;
}
.tasksCalendar[view=month] .wrapperButton:hover {
  background: var(--background-modifier-hover);
}
.tasksCalendar[view=month] .cell {
  margin: 0;
}
.tasksCalendar[view=month] .cell.today {
  background: var(--background-modifier-active-hover) !important;
  border: 1px solid hsla(var(--interactive-accent-hsl), 0.25) !important;
  border-radius: 5px;
}
.tasksCalendar[view=month] .prevMonth,
.tasksCalendar[view=month] .nextMonth {
  background: var(--background-secondary);
}
.tasksCalendar[view=list] .list {
  border: 1px solid var(--nav-item-background-active);
  border-radius: 5px;
}
.tasksCalendar[view=list] .list .task .inner {
  display: flex !important;
  flex-direction: row;
  flex-wrap: nowrap;
  padding: 0 10px;
  white-space: nowrap;
}
.tasksCalendar[view=list] .list .task .note {
  display: inline-block;
  flex-grow: 0;
  flex-shrink: 0;
  width: 150px;
}
.tasksCalendar[view=list] .list .task .description {
  flex-grow: 1;
  flex-shrink: 1;
  width: 100%;
}
.tasksCalendar[view=list] .list .task.done .note, .tasksCalendar[view=list] .list .task.done .description, .tasksCalendar[view=list] .list .task.cancelled .note, .tasksCalendar[view=list] .list .task.cancelled .description {
  color: var(--text-faint) !important;
}
.tasksCalendar[view=list] .list .task, .tasksCalendar[view=list] .list .task.done,
.tasksCalendar[view=list] .list .task .note, .tasksCalendar[view=list] .list .task.done .note {
  background: transparent !important;
}
.tasksCalendar[view=list] .list .task .note,
.tasksCalendar[view=list] .list .task .description {
  color: var(--task-color) !important;
  font-size: 14px;
  line-clamp: 0 !important;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap !important;
}
.tasksCalendar[view=list] details {
  /*background: $background-secondary;*/
  border-radius: 5px;
  border: 1px solid var(--nav-item-background-active);
  display: block;
  margin: 5px;
}
.tasksCalendar[view=list] details.today {
  background: var(--background-modifier-active-hover);
  border: 1px solid hsla(var(--interactive-accent-hsl), 0.25);
}
.tasksCalendar[view=list] details.today summary {
  background: none;
  font-weight: bold;
}
.tasksCalendar[view=list] details.today .content {
  margin: 3px;
}
.tasksCalendar[view=list] summary {
  background: var(--background-secondary);
  border-radius: 5px;
  padding: 0 10px;
}
.tasksCalendar[view=list] summary span.weekNr {
  color: var(--text-faint);
  font-size: 11px;
}
.tasksCalendar[view=list] button.listView, .tasksCalendar[view=week] button.weekView, .tasksCalendar[view=month] button.monthView, .tasksCalendar.filter button.filter {
  background: var(--background-modifier-active-hover);
}
.tasksCalendar[view=list] button.listView svg, .tasksCalendar[view=week] button.weekView svg, .tasksCalendar[view=month] button.monthView svg, .tasksCalendar.filter button.filter svg {
  stroke: var(--icon-color-active) !important;
}
.tasksCalendar[view=month] .wrappers, .tasksCalendar[view=week] .grid {
  position: relative;
}
.tasksCalendar[view=month] .wrappers:before, .tasksCalendar[view=week] .grid:before, .tasksCalendar[view=list] .list:before {
  color: var(--background-modifier-active-hover);
  font-size: 120px;
  font-weight: bold;
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: 0;
}
.tasksCalendar[view=month] .wrappers:before, .tasksCalendar[view=list] .list:before {
  content: attr(data-month);
}
.tasksCalendar.focusDailyNote .task {
  opacity: 0.25 !important;
}
.tasksCalendar.focusDailyNote .task.dailyNote {
  opacity: 1 !important;
}
.tasksCalendar.focusDone .task {
  opacity: 0.25 !important;
}
.tasksCalendar.focusDone .task.done {
  opacity: 1 !important;
}
.tasksCalendar.focusDue .task {
  opacity: 0.25 !important;
}
.tasksCalendar.focusDue .task.due {
  opacity: 1 !important;
}
.tasksCalendar.focusOverdue .task {
  opacity: 0.25 !important;
}
.tasksCalendar.focusOverdue .task.overdue {
  opacity: 1 !important;
}
.tasksCalendar.focusRecurrence .task {
  opacity: 0.25 !important;
}
.tasksCalendar.focusRecurrence .task.recurrence {
  opacity: 1 !important;
}
.tasksCalendar.focusScheduled .task {
  opacity: 0.25 !important;
}
.tasksCalendar.focusScheduled .task.scheduled {
  opacity: 1 !important;
}
.tasksCalendar.focusStart .task {
  opacity: 0.25 !important;
}
.tasksCalendar.focusStart .task.start {
  opacity: 1 !important;
}

.iconStyle11 {
  display: none !important;
}

.tasksCalendar[view=week].style1 .grid,
.iconStyle1 {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(6, 1fr);
}

.tasksCalendar[view=week].style2 .grid,
.iconStyle2 {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(6, 1fr);
}

.tasksCalendar[view=week].style3 .grid,
.iconStyle3 {
  grid-template-columns: 1fr;
  grid-template-rows: repeat(7, 1fr);
}

.tasksCalendar[view=week].style4 .grid,
.iconStyle4 {
  grid-template-columns: repeat(7, 1fr);
  grid-template-rows: 1fr;
}

.tasksCalendar[view=week].style5 .grid,
.iconStyle5 {
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(10, 1fr);
}

.tasksCalendar[view=week].style6 .grid,
.iconStyle6 {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(10, 1fr);
}

.tasksCalendar[view=week].style7 .grid,
.iconStyle7 {
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(8, 1fr);
}

.tasksCalendar[view=week].style8 .grid,
.iconStyle8 {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(5, 1fr);
}

.tasksCalendar[view=week].style9 .grid,
.iconStyle9 {
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

.tasksCalendar[view=week].style10 .grid,
.iconStyle10 {
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(3, 1fr);
}

.tasksCalendar[view=week].style11 .grid,
.iconStyle11 {
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: 1fr;
}

.tasksCalendar[view=week].style1 .grid .cell:nth-child(1),
.iconStyle1 .box:nth-child(1) {
  grid-area: 1/1/3/2;
}

.tasksCalendar[view=week].style1 .grid .cell:nth-child(2),
.iconStyle1 .box:nth-child(2) {
  grid-area: 3/1/5/3;
}

.tasksCalendar[view=week].style1 .grid .cell:nth-child(3),
.iconStyle1 .box:nth-child(3) {
  grid-area: 5/1/7/3;
}

.tasksCalendar[view=week].style1 .grid .cell:nth-child(4),
.iconStyle1 .box:nth-child(4) {
  grid-area: 1/3/3/5;
}

.tasksCalendar[view=week].style1 .grid .cell:nth-child(5),
.iconStyle1 .box:nth-child(5) {
  grid-area: 3/3/5/5;
}

.tasksCalendar[view=week].style1 .grid .cell:nth-child(6),
.iconStyle1 .box:nth-child(6) {
  grid-area: 5/3/6/5;
}

.tasksCalendar[view=week].style1 .grid .cell:nth-child(7),
.iconStyle1 .box:nth-child(7) {
  grid-area: 6/3/7/5;
}

.tasksCalendar[view=week].style2 .grid .cell:nth-child(1),
.iconStyle2 .box:nth-child(1) {
  grid-area: 1/1/3/3;
}

.tasksCalendar[view=week].style2 .grid .cell:nth-child(2),
.iconStyle2 .box:nth-child(2) {
  grid-area: 3/1/5/3;
}

.tasksCalendar[view=week].style2 .grid .cell:nth-child(3),
.iconStyle2 .box:nth-child(3) {
  grid-area: 5/1/7/3;
}

.tasksCalendar[view=week].style2 .grid .cell:nth-child(4),
.iconStyle2 .box:nth-child(4) {
  grid-area: 1/3/3/5;
}

.tasksCalendar[view=week].style2 .grid .cell:nth-child(5),
.iconStyle2 .box:nth-child(5) {
  grid-area: 3/3/5/5;
}

.tasksCalendar[view=week].style2 .grid .cell:nth-child(6),
.iconStyle2 .box:nth-child(6) {
  grid-area: 5/3/6/5;
}

.tasksCalendar[view=week].style2 .grid .cell:nth-child(7),
.iconStyle2 .box:nth-child(7) {
  grid-area: 6/3/7/5;
}

.tasksCalendar[view=week].style5 .grid .cell:nth-child(1),
.iconStyle5 .box:nth-child(1) {
  grid-area: 1/1/3/2;
}

.tasksCalendar[view=week].style5 .grid .cell:nth-child(2),
.iconStyle5 .box:nth-child(2) {
  grid-area: 3/1/5/2;
}

.tasksCalendar[view=week].style5 .grid .cell:nth-child(3),
.iconStyle5 .box:nth-child(3) {
  grid-area: 5/1/7/2;
}

.tasksCalendar[view=week].style5 .grid .cell:nth-child(4),
.iconStyle5 .box:nth-child(4) {
  grid-area: 7/1/9/2;
}

.tasksCalendar[view=week].style5 .grid .cell:nth-child(5),
.iconStyle5 .box:nth-child(5) {
  grid-area: 9/1/11/2;
}

.tasksCalendar[view=week].style5 .grid .cell:nth-child(6),
.iconStyle5 .box:nth-child(6) {
  grid-area: 1/2/6/3;
}

.tasksCalendar[view=week].style5 .grid .cell:nth-child(7),
.iconStyle5 .box:nth-child(7) {
  grid-area: 6/2/11/3;
}

.tasksCalendar[view=week].style6 .grid .cell:nth-child(1),
.iconStyle6 .box:nth-child(1) {
  grid-area: 1/1/3/3;
}

.tasksCalendar[view=week].style6 .grid .cell:nth-child(2),
.iconStyle6 .box:nth-child(2) {
  grid-area: 3/1/5/3;
}

.tasksCalendar[view=week].style6 .grid .cell:nth-child(3),
.iconStyle6 .box:nth-child(3) {
  grid-area: 5/1/7/3;
}

.tasksCalendar[view=week].style6 .grid .cell:nth-child(4),
.iconStyle6 .box:nth-child(4) {
  grid-area: 7/1/9/3;
}

.tasksCalendar[view=week].style6 .grid .cell:nth-child(5),
.iconStyle6 .box:nth-child(5) {
  grid-area: 9/1/11/3;
}

.tasksCalendar[view=week].style6 .grid .cell:nth-child(6),
.iconStyle6 .box:nth-child(6) {
  grid-area: 1/3/6/4;
}

.tasksCalendar[view=week].style6 .grid .cell:nth-child(7),
.iconStyle6 .box:nth-child(7) {
  grid-area: 6/3/11/4;
}

.tasksCalendar[view=week].style7 .grid .cell:nth-child(1),
.iconStyle7 .box:nth-child(1) {
  grid-area: 1/1/3/2;
}

.tasksCalendar[view=week].style7 .grid .cell:nth-child(2),
.iconStyle7 .box:nth-child(2) {
  grid-area: 3/1/5/2;
}

.tasksCalendar[view=week].style7 .grid .cell:nth-child(3),
.iconStyle7 .box:nth-child(3) {
  grid-area: 5/1/7/2;
}

.tasksCalendar[view=week].style7 .grid .cell:nth-child(4),
.iconStyle7 .box:nth-child(4) {
  grid-area: 7/1/9/2;
}

.tasksCalendar[view=week].style7 .grid .cell:nth-child(5),
.iconStyle7 .box:nth-child(5) {
  grid-area: 1/2/3/3;
}

.tasksCalendar[view=week].style7 .grid .cell:nth-child(6),
.iconStyle7 .box:nth-child(6) {
  grid-area: 3/2/6/3;
}

.tasksCalendar[view=week].style7 .grid .cell:nth-child(7),
.iconStyle7 .box:nth-child(7) {
  grid-area: 6/2/9/3;
}

.tasksCalendar[view=week].style8 .grid .cell:nth-child(1),
.iconStyle8 .box:nth-child(1) {
  grid-area: 1/1/3/2;
}

.tasksCalendar[view=week].style8 .grid .cell:nth-child(2),
.iconStyle8 .box:nth-child(2) {
  grid-area: 1/2/3/3;
}

.tasksCalendar[view=week].style8 .grid .cell:nth-child(3),
.iconStyle8 .box:nth-child(3) {
  grid-area: 1/3/3/4;
}

.tasksCalendar[view=week].style8 .grid .cell:nth-child(4),
.iconStyle8 .box:nth-child(4) {
  grid-area: 3/1/5/2;
}

.tasksCalendar[view=week].style8 .grid .cell:nth-child(5),
.iconStyle8 .box:nth-child(5) {
  grid-area: 3/2/5/3;
}

.tasksCalendar[view=week].style8 .grid .cell:nth-child(6),
.iconStyle8 .box:nth-child(6) {
  grid-area: 3/3/5/4;
}

.tasksCalendar[view=week].style8 .grid .cell:nth-child(7),
.iconStyle8 .box:nth-child(7) {
  grid-area: 5/1/6/4;
}

.tasksCalendar[view=week].style9 .grid .cell:nth-child(1),
.iconStyle9 .box:nth-child(1) {
  grid-area: 1/1/3/3;
}

.tasksCalendar[view=week].style9 .grid .cell:nth-child(2),
.iconStyle9 .box:nth-child(2) {
  grid-area: 1/3/3/5;
}

.tasksCalendar[view=week].style9 .grid .cell:nth-child(3),
.iconStyle9 .box:nth-child(3) {
  grid-area: 1/5/3/7;
}

.tasksCalendar[view=week].style9 .grid .cell:nth-child(4),
.iconStyle9 .box:nth-child(4) {
  grid-area: 1/7/3/9;
}

.tasksCalendar[view=week].style9 .grid .cell:nth-child(5),
.iconStyle9 .box:nth-child(5) {
  grid-area: 1/9/3/11;
}

.tasksCalendar[view=week].style9 .grid .cell:nth-child(6),
.iconStyle9 .box:nth-child(6) {
  grid-area: 3/1/4/6;
}

.tasksCalendar[view=week].style9 .grid .cell:nth-child(7),
.iconStyle9 .box:nth-child(7) {
  grid-area: 3/6/4/11;
}

.tasksCalendar[view=week].style10 .grid .cell:nth-child(1),
.iconStyle10 .box:nth-child(1) {
  grid-area: 1/1/4/3;
}

.tasksCalendar[view=week].style10 .grid .cell:nth-child(2),
.iconStyle10 .box:nth-child(2) {
  grid-area: 1/3/4/5;
}

.tasksCalendar[view=week].style10 .grid .cell:nth-child(3),
.iconStyle10 .box:nth-child(3) {
  grid-area: 1/5/4/7;
}

.tasksCalendar[view=week].style10 .grid .cell:nth-child(4),
.iconStyle10 .box:nth-child(4) {
  grid-area: 1/7/3/9;
}

.tasksCalendar[view=week].style10 .grid .cell:nth-child(5),
.iconStyle10 .box:nth-child(5) {
  grid-area: 1/9/3/11;
}

.tasksCalendar[view=week].style10 .grid .cell:nth-child(6),
.iconStyle10 .box:nth-child(6) {
  grid-area: 3/7/4/9;
}

.tasksCalendar[view=week].style10 .grid .cell:nth-child(7),
.iconStyle10 .box:nth-child(7) {
  grid-area: 3/9/4/11;
}

body:not(.is-mobile) .tasksCalendar button.listView:hover,
body:not(.is-mobile) .tasksCalendar button.weekView:hover,
body:not(.is-mobile) .tasksCalendar button.monthView:hover,
body:not(.is-mobile) .tasksCalendar button.previous:hover,
body:not(.is-mobile) .tasksCalendar button.next:hover,
body:not(.is-mobile) .tasksCalendar button.current:hover,
body:not(.is-mobile) .tasksCalendar button.filter:hover,
body:not(.is-mobile) .tasksCalendar button.statistic:hover {
  background: var(--background-modifier-hover);
}
body:not(.is-mobile) .tasksCalendar .statisticPopup li:not(.active):hover,
body:not(.is-mobile) .tasksCalendar .weekViewContext li:not(.active):hover {
  background: var(--background-modifier-hover);
}
body:not(.is-mobile) .tasksCalendar .cellName:hover {
  opacity: 1;
}
body:not(.is-mobile) .tasksCalendar .task:hover {
  opacity: 1;
}
body.theme-dark .tasksCalendar .task {
  color: var(--light-task-text-color);
}
body.theme-dark .tasksCalendar .task .note {
  color: var(--light-task-text-color);
}
body.theme-light .tasksCalendar .task {
  color: var(--dark-task-text-color);
}
body.theme-light .tasksCalendar .task .note {
  color: var(--dark-task-text-color);
}
body.is-mobile .tasksCalendar .gridHead,
body.is-mobile .tasksCalendar .cellName,
body.is-mobile .tasksCalendar .task {
  font-size: 9px;
}
body.is-mobile .tasksCalendar[view=week]:not(.style4) .cellName, body.is-mobile .tasksCalendar[view=week]:not(.style4) .task {
  font-size: 13px !important;
}
body.is-mobile .tasksCalendar .statisticPopup li {
  font-size: 13px !important;
}

/**
 * This code is inspired from the work of 702573N https://github.com/702573N/Obsidian-Tasks-Timeline
 */
.taskido {
  cursor: default;
  user-select: none;
}
.taskido .task {
  border-radius: 10px;
  cursor: pointer;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  margin: 0;
  padding: 0;
}
.taskido .task.overdue .timeline .icon svg line {
  stroke-width: 2.5px !important;
  stroke: #ff375f !important;
}
.taskido .task.overdue .info .relative {
  color: #ff375f !important;
}
.taskido .task.done .timeline .icon svg {
  fill: var(--interactive-accent) !important;
  stroke: var(--interactive-accent) !important;
}
.taskido .task.done .timeline .icon svg path:nth-child(1) {
  fill: var(--interactive-accent) !important;
}
.taskido .task.done .timeline .icon svg path:nth-child(2) {
  stroke-width: 2.5px;
  stroke: var(--checkbox-marker-color) !important;
}
.taskido .task .content {
  color: var(--text-normal);
  display: block;
  font-size: 15px;
  font-weight: normal;
  line-height: 22px;
  white-space: break-word;
}
.taskido .task .info {
  cursor: default;
  line-height: 22px;
  padding-bottom: 2px;
}
.taskido .task .info:empty {
  display: none;
}
.taskido .task .info .file {
  color: var(--task-color);
}
.taskido .task .info .tag {
  background: none !important;
  color: var(--tag-color) !important;
  cursor: pointer;
}
.taskido .task .info .icon {
  height: 15px;
  text-align: center;
}
.taskido .task .info .label {
  margin-left: 2px;
}
.taskido .task .info svg {
  height: 12px;
  stroke-width: 1.75px;
  width: 12px;
}
.taskido .task .info .tag,
.taskido .task .info .repeat,
.taskido .task .info .priority,
.taskido .task .info .relative,
.taskido .task .info .file {
  align-items: center;
  border-radius: 3px !important;
  border: none;
  color: var(--text-muted);
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  font-size: 9px;
  font-weight: normal;
  line-height: 1 !important;
  margin: 2px 5px 2px 0;
  padding: 0;
  padding: 0px;
  width: auto;
}
.taskido .task.done .info .tag,
.taskido .task.done .info .repeat,
.taskido .task.done .info .priority,
.taskido .task.done .info .relative,
.taskido .task.done .info .file, .taskido .task.cancelled .info .tag,
.taskido .task.cancelled .info .repeat,
.taskido .task.cancelled .info .priority,
.taskido .task.cancelled .info .relative,
.taskido .task.cancelled .info .file {
  color: var(--text-muted) !important;
  line-height: 0;
}
.taskido .task.done .content, .taskido .task.cancelled .content {
  color: var(--text-muted);
  text-decoration: line-through;
}
.taskido .task .innerLink,
.taskido .task .outerLink {
  color: var(--interactive-accent);
  text-decoration: underline !important;
}
.taskido .info .icon {
  text-align: center;
  height: 15px;
}
.taskido .info .label {
  margin-left: 2px;
}
.taskido .info svg {
  height: 12px;
  width: 12px;
  stroke-width: 1.75px;
}
.taskido .year {
  color: var(--text-normal);
  font-size: 30px;
  font-weight: bold;
  margin: 20px 0;
  text-align: center;
}
.taskido .details {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  height: auto;
  width: 100%;
}
.taskido .details .today {
  padding: 30px 0;
}
.taskido .todayFocus .todayHeader {
  color: var(--interactive-accent);
}
.taskido .todayFocus .details:not(.today),
.taskido .todayFocus .year {
  display: none !important;
}
.taskido .todayFocus .details.today {
  padding: 0;
}
.taskido .todayHeader {
  border-radius: 10px;
  cursor: pointer;
  font-size: 24px;
  font-weight: bold;
  margin: 10px 5px;
  text-align: center;
}
.taskido .counters {
  align-content: center;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  margin: 20px 0;
}
.taskido .counter {
  background: var(--interactive-normal);
  border-radius: 10px;
  box-shadow: var(--input-shadow);
  color: var(--text-normal);
  cursor: pointer;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  flex: 1 1 0;
  margin: 0 5px;
  max-width: 150px;
  min-width: 70px;
  overflow: hidden;
  padding: 5px;
  text-align: center;
}
.taskido .counter .label {
  font-size: 12px;
  font-weight: normal;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.taskido .count {
  font-size: 18px;
  font-weight: normal;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.taskido .dateLine {
  align-items: center;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
  margin: 10px 0;
}
.taskido .date {
  color: var(--text-normal);
  font-size: 16px;
  font-weight: bold;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.taskido .weekday {
  color: var(--text-normal);
  font-size: 16px;
  font-weight: normal;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.taskido .timeline {
  flex-grow: 0;
  flex-shrink: 0;
  width: 50px;
}
.taskido .timeline .icon {
  height: 22px;
  text-align: center;
}
.taskido .timeline .icon svg {
  color: var(--checkbox-border-color);
  height: var(--checkbox-size);
  stroke-width: 1.75px;
  width: var(--checkbox-size);
}
.taskido .timeline .icon svg:hover {
  color: var(--checkbox-border-color-hover);
}
.taskido .lines {
  flex-grow: 1;
  flex-shrink: 1;
  overflow: hidden;
}
.taskido .line {
  align-items: center;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.taskido .stripe {
  align-items: center;
  background: var(--checkbox-border-color);
  display: flex;
  flex-grow: 1;
  flex-shrink: 1;
  justify-content: center;
  margin: 0 auto;
  width: 1px;
}
.taskido .icon {
  align-items: center;
  display: flex;
  flex-grow: 0;
  flex-shrink: 0;
  justify-content: center;
  text-align: center;
}
.taskido .quickEntryPanel {
  background: var(--background-modifier-form-field);
  border-radius: 10px;
  border: var(--input-border-width) solid var(--background-modifier-border);
  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);
  color: var(--text-normal);
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  margin: 0 5px 20px 5px;
  overflow: hidden;
  padding: 5px;
}
.taskido .quickEntryPanel .left {
  align-items: center;
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  flex-shrink: 1;
  flex-wrap: nowrap;
  overflow: hidden;
  padding: 0 5px !important;
  width: 100%;
}
.taskido .quickEntryPanel .right {
  border-radius: 5px;
  display: block;
  flex-grow: 1;
  flex-shrink: 1;
  overflow: hidden;
  width: auto;
}
.taskido .quickEntryPanel input {
  cursor: text;
  font-size: 14px;
  height: 20px;
  line-height: 20px;
  margin: 0 !important;
  overflow: hidden;
  padding: 0 !important;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}
.taskido .quickEntryPanel select {
  color: var(--text-muted);
  font-size: 11px;
  height: 15px;
  margin: 2.5px 0 !important;
  overflow: hidden;
  padding: 0 !important;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}
.taskido .quickEntryPanel select option,
.taskido .quickEntryPanel select optgroup {
  background: var(--background-primary);
  color: var(--text-normal);
  font-weight: normal;
}
.taskido .quickEntryPanel button {
  align-items: center;
  color: var(--text-muted);
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  height: 100%;
  justify-content: center;
  margin: 0 !important;
  padding: 0 5px !important;
  width: auto;
}
.taskido .quickEntryPanel svg {
  height: 15px;
  stroke-width: 1.75px;
  width: 15px;
}
.taskido .quickEntryPanel select,
.taskido .quickEntryPanel input,
.taskido .quickEntryPanel button {
  background: none !important;
  border-radius: 0 !important;
  border: none !important;
  box-shadow: none !important;
}
.taskido .quickEntryPanel select:active,
.taskido .quickEntryPanel input:active,
.taskido .quickEntryPanel button:active {
  border: none !important;
  box-shadow: none !important;
  transition: none !important;
}
.taskido .quickEntryPanel select,
.taskido .quickEntryPanel button {
  cursor: pointer;
}
.taskido .quickEntryPanel select:hover,
.taskido .quickEntryPanel button:hover {
  color: var(--text-normal);
}
.taskido .noColor .task .file {
  color: var(--text-muted) !important;
}
.taskido .noColor .task .info .file {
  color: var(--text-muted) !important;
}
.taskido a {
  color: inherit !important;
  text-decoration: none !important;
}
.taskido span {
  display: contents;
}
.taskido .timeline,
.taskido .lines {
  cursor: default;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}
.taskido .todoFocus .counter#todo,
.taskido .todoFilter .counter#todo,
.taskido .overdueFocus .counter#overdue,
.taskido .overdueFilter .counter#overdue,
.taskido .unplannedFocus .counter#unplanned,
.taskido .unplannedFilter .counter#unplanned {
  background: hsla(var(--interactive-accent-hsl), 0.2);
  box-shadow: var(--input-shadow);
  color: var(--interactive-accent);
}
.taskido.noYear .year, .taskido.noRepeat .repeat, .taskido.noTag .tag, .taskido.noFile .task .file, .taskido.noPriority .priority, .taskido.noHeader .task .header, .taskido.noFile .task .info > .file, .taskido.noInfo .task .line:nth-child(2), .taskido.noDone .year[data-types=done], .taskido.noDone .details[data-types=done], .taskido.noDone .task.done, .taskido.noUnplanned .task.unplanned, .taskido.noUnplanned .counter#unplanned, .taskido.noUnplanned .year[data-types=unplanned], .taskido.noUnplanned .details[data-types=unplanned], .taskido.noRelative .relative, .taskido.noQuickEntry .quickEntryPanel, .taskido.noCounters .counters {
  display: none !important;
}
.taskido .todoFocus .details.today .task.due,
.taskido .todoFocus .details.today .task.scheduled,
.taskido .todoFocus .details.today .task.process,
.taskido .todoFocus .details.today .task.start,
.taskido .overdueFocus .task.overdue,
.taskido .unplannedFocus .task.unplanned {
  background: hsla(var(--interactive-accent-hsl), 0.2);
}
.taskido .todoFilter .year:not(.current):not([data-types*=due][data-types*=scheduled][data-types*=overdue]),
.taskido .todoFilter .details:not(.today):not([data-types*=due][data-types*=scheduled][data-types*=overdue]),
.taskido .todoFilter .task:not(.due, .scheduled, .process, .start),
.taskido .overdueFilter .year:not(.current):not([data-types*=overdue]),
.taskido .overdueFilter .details:not(.today):not([data-types*=overdue]),
.taskido .overdueFilter .task:not(.overdue),
.taskido .unplannedFilter .year:not(.current):not([data-types*=unplanned]),
.taskido .unplannedFilter .details:not(.today):not([data-types*=unplanned]),
.taskido .unplannedFilter .task:not(.unplanned) {
  display: none;
}

.max-width {
  display: flex;
  flex-grow: 1;
  max-width: 100%;
}
.max-width div div:first-child {
  max-width: 80%;
  overflow: hidden;
}

@keyframes confetti {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  100% {
    transform: translateY(100px) rotate(360deg);
  }
}
.no-animation * {
  animation: none !important;
  transition: none !important;
}

/* credits to heliostatic from https://github.com/heliostatic/completed-task-display */
.hide-finished-tasks .markdown-preview-view ul > li.is-checked[data-task=x],
.hide-finished-tasks .markdown-preview-view ul > li.is-checked[data-task="-"],
.hide-finished-tasks .markdown-preview-view ul > li.is-checked[data-task-status-type=DONE],
.hide-finished-tasks .markdown-preview-view ul > li.is-checked[data-task-status-type=CANCELLED],
.hide-finished-tasks .markdown-source-view .HyperMD-task-line[data-task=x],
.hide-finished-tasks .markdown-source-view .HyperMD-task-line[data-task="-"],
.hide-finished-tasks .markdown-source-view .HyperMD-task-line[data-task-status-type=DONE],
.hide-finished-tasks .markdown-source-view .HyperMD-task-line[data-task-status-type=CANCELLED] {
  display: none;
}

.markdown-preview-view [data-task="-"] input,
.markdown-preview-view [data-task-status-type=CANCELLED] input,
.markdown-source-view input[data-task="-"],
.markdown-source-view input[data-task-status-type=CANCELLED] {
  background-color: var(--color-red);
  border-color: var(--color-red);
}

.markdown-preview-view [data-task="-"] input:hover,
.markdown-preview-view [data-task-status-type=CANCELLED] input:hover,
.markdown-source-view input[data-task="-"]:hover,
.markdown-source-view input[data-task-status-type=CANCELLED]:hover {
  background-color: var(--color-red);
  border-color: var(--color-red);
}

.profile-view {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 5px;
}

.profile-view-avatar {
  grid-column: 1;
  grid-row: 1/span 2;
  border: var(--border-width) solid var(--text-muted);
  border-radius: var(--radius-s);
  padding: 5px;
}
.profile-view-avatar img {
  width: 100%;
  height: auto;
  border-radius: var(--radius-s);
}

.profile-view-level {
  grid-column: 2;
  grid-row: 1;
  border: var(--border-width) solid var(--text-muted);
  border-radius: var(--radius-s);
  padding: 5px;
}

.profile-view-mastery {
  grid-column: 3;
  grid-row: 1;
  border: var(--border-width) solid var(--text-muted);
  border-radius: var(--radius-s);
  padding: 5px;
}

.profile-view-progress {
  grid-column: 2/span 2;
  grid-row: 2;
  border: var(--border-width) solid var(--text-muted);
  border-radius: var(--radius-s);
  padding: 5px;
}

/*# sourceMappingURL=styles.css.map */
